spring.application.name=course-service
server.port=8081

# when server receives a SIGTERM, stop accepting new requests but complete that are in progress
# within default 30 seconds https://habr.com/en/companies/maxilect/articles/666090/
server.shutdown=graceful

# Tomcat configuration
# Tell Tomcat how long to wait after opening a connection before receiving a request
# This can help protect against DoS attacks, when a client opens a connection but does not send a request
# This is also the time Tomcat will spend reading the request body
server.tomcat.connection-timeout=3s
# Time Tomcat keeps a connection open, waiting for new requests
server.tomcat.keep-alive-timeout=20s
# Tomcat uses a thread pool to handle incoming connections: one connection = one thread. By default, max 200
server.tomcat.threads.max=200
# Minimum number of threads that will be created in the pool at server startup
server.tomcat.threads.min-spare=10
# time during which current requests will be processed after receiving the SIGTERM signal
spring.lifecycle.timeout-per-shutdown-phase=30s

# DataSource configuration
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.url=jdbc:postgresql://localhost:25432/course_service_db

# Timeout for acquiring a connection from the pool (in milliseconds)
spring.datasource.hikari.connection-timeout=2000
# HikariCP configuration
# HikariCP experts recommend using the formula: connections = ((core_count * 2) + effective_spindle_count)
# Where core_count = number of CPU cores
# effective_spindle_count = number of spinning disks (0 for SSD)
# For example, if cores = 4, maximum-pool-size = 8
# https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
spring.datasource.hikari.maximum-pool-size=8

# JPA / Hibernate
# Disable Open-In-View pattern to avoid potential performance issues and lazy loading exceptions
spring.jpa.open-in-view=false
# Validate database schema matches JPA entities
spring.jpa.hibernate.ddl-auto=validate
# Hibernate SQL formatting for better readability in logs
spring.jpa.properties.hibernate.format_sql=true
# Show SQL statements in logs for debugging
spring.jpa.properties.hibernate.show_sql=true

#Swagger UI http://localhost:8081/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

